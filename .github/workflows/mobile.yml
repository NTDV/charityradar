name: Android Build

on:
  workflow_dispatch:
  release:
    types: [published]

defaults:
  run:
    working-directory: front # The working directory path

jobs:
  dev-distribution:
    runs-on: ubuntu-latest
    name: Development Distribution
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16'
        cache: 'yarn'
        cache-dependency-path: front/package-lock.json
    
    - name: Install node modules
      run: |
        yarn install
    - name: Run test
      run: |
        yarn test-ci
    - name: Cache Gradle Wrapper
      uses: actions/cache@v2
      with:
        path: front/.gradle/wrapper
        key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}

    - name: Cache Gradle Dependencies
      uses: actions/cache@v3
      with:
        path: front/.gradle/caches
        key: ${{ runner.os }}-gradle-caches-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-caches-
    - name: Make Gradlew Executable
      run: cd android && chmod +x ./gradlew

    - name: Build Android Release
      run: |
        cd android && ./gradlew assembleRelease --no-daemon
    - name: Upload Artifact
      uses: actions/upload-artifact@v1
      with:
        name: app-release.apk
        path: front/android/app/build/outputs/apk/release/

    #- name: Distribute app via Firebase App Distribution
    #  env:
    #      firebaseToken: ${{ secrets.FIREBASE_TOKEN }}
    #      firebaseGroups: ${{ secrets.FIREBASE_GROUPS }}
    #      firebaseAppId: ${{ secrets.FIREBASE_APP_ID }}
    #      notes: ${{ github.event.head_commit.message }}
    #  run: |
    #    yarn global add firebase-tools
    #    export PATH="$(yarn global bin):$PATH"
    #    firebase \
    #      appdistribution:distribute android/app/build/outputs/apk/release/app-release.apk \
    #      --app $firebaseAppId \
    #      --release-notes "$notes" \
    #      --groups "$firebaseGroups" \
    #      --token "$firebaseToken"
